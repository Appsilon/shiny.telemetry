[{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Appsilon Data Science. Maintainer.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Science AD (2023). shiny.telemetry: Shiny app usability logs statistics. R package version 0.0.9002.","code":"@Manual{,   title = {shiny.telemetry: Shiny app usability logs and statistics},   author = {Appsilon Data Science},   year = {2023},   note = {R package version 0.0.9002}, }"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"shinytelemetry","dir":"","previous_headings":"","what":"Shiny app usability logs and statistics","title":"Shiny app usability logs and statistics","text":"Easy way logging users activity adding statistics panel Shiny app.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Shiny app usability logs and statistics","text":"Remote DB. Can PostgreSQL DB simple sqlite file.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-register-users-action","dir":"","previous_headings":"","what":"How to register user’s action?","title":"Shiny app usability logs and statistics","text":"Prepare DB store results (use SQLite, PostgreSQL possible well). Depending authentication approach, define function extract username. example just extract username url username parameter. Structure main app register user’s actions. Run play app http://localhost:8888/?username=<username>.","code":"# run only once connection <- DBI::dbConnect(RSQLite::SQLite(), dbname = \"user_stats.sqlite\") DBI::dbDisconnect(connection) get_user <- function(session) {   parseQueryString(isolate(session$clientData$url_search))$username } library(shiny) library(shiny.telemetry) library(RSQLite)  ui <- fluidPage(   titlePanel(\"Old Faithful Geyser Data\"),   sidebarLayout(     sidebarPanel(       sliderInput(\"bins\",                   \"Number of bins:\",                   min = 1,                   max = 50,                   value = 30),       actionButton(\"apply_slider\", \"Apply\")     ),     mainPanel(       plotOutput(\"distPlot\")     )   ) )  server <- function(input, output, session) {   connection <- odbc::dbConnect(RSQLite::SQLite(), dbname = \"user_stats.sqlite\")    # creating user connection list and making sure required tables exist in DB   user_connection <- initialize_connection(connection, username = get_user(session))    # registering login   log_login(user_connection)    # selecting registered actions to watch   log_click(user_connection, id = \"apply_slider\")   log_input(user_connection, input, input_id = \"bins\")    # server code   output$distPlot <- renderPlot({     input$apply_slider     x <- faithful[, 2]     bins <- seq(min(x), max(x), length.out = isolate(input$bins) + 1)     hist(x, breaks = bins, col = 'darkgray', border = 'white')   })    # registering logout (this also disconnects connection object, if not used take care of it on your own)   log_logout(user_connection) } shinyApp(ui = ui, server = server, options = list(port = 8888, launch.browser = FALSE))"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-display-users-stats","dir":"","previous_headings":"","what":"How to display users’ stats?","title":"Shiny app usability logs and statistics","text":"Create following app. Run app see usage statistics http://localhost:8887/?username=<username>.","code":"library(shiny) library(RSQLite) # please install shiny.telemetry with all dependencies # install.packages(\"shiny.telemetry\", dependencies = TRUE) library(shiny.telemetry)  # prepare credentials list to access logs: db_credentials <- list(   DB_NAME = \"user_stats.sqlite\",   DB_DRIVER = \"SQLite\" )  # define function hot to get username get_user <- function(session) {   username <- isolate(parseQueryString(session$clientData$url_search)$username)   req(username)   return(username) }  # define ui and server ui <- shiny_stats_ui() server <- shiny_stats_server(get_user, db_credentials = db_credentials) shinyApp(ui = ui, server = server, options = list(port = 8887, launch.browser = FALSE))"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Shiny app usability logs and statistics","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Check Rhinoverse.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/AVAILABLE_DB_DRIVERS.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible drivers allowed for log storage — AVAILABLE_DB_DRIVERS","title":"Possible drivers allowed for log storage — AVAILABLE_DB_DRIVERS","text":"values can used DRV parameter inside config_file.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/AVAILABLE_DB_DRIVERS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible drivers allowed for log storage — AVAILABLE_DB_DRIVERS","text":"","code":"AVAILABLE_DB_DRIVERS"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/AVAILABLE_DB_DRIVERS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible drivers allowed for log storage — AVAILABLE_DB_DRIVERS","text":"object class character length 2.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/MAX_POSTGRES_CONNECTIONS.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum of connections — MAX_POSTGRES_CONNECTIONS","title":"Maximum of connections — MAX_POSTGRES_CONNECTIONS","text":"Set maximum connections postgres one session","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/MAX_POSTGRES_CONNECTIONS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum of connections — MAX_POSTGRES_CONNECTIONS","text":"","code":"MAX_POSTGRES_CONNECTIONS"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/MAX_POSTGRES_CONNECTIONS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maximum of connections — MAX_POSTGRES_CONNECTIONS","text":"object class numeric length 1.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/browser_info_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Browser info — browser_info_js","title":"Browser info — browser_info_js","text":"sends info user's browser server. Place inside head tag Shiny app. can get value server input[[\"browser_version\"]]. can also use log_browser_version function log browser version sqlite file.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/browser_info_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browser info — browser_info_js","text":"","code":"browser_info_js  log_browser_version(input, user_connection_data)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/browser_info_js.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Browser info — browser_info_js","text":"object class html (inherits character) length 1.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/browser_info_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browser info — browser_info_js","text":"input input object inherited server function. user_connection_data List user session DB connection. See initialize_connection.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/browser_info_js.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browser info — browser_info_js","text":"","code":"## Only run examples in interactive R sessions if (interactive()) { library(shiny) library(shiny.semantic) library(shiny.telemetry)  ui <- function() {   shinyUI(     semanticPage(       tags$head(shiny.telemetry::browser_info_js),       title = \"Browser info example\",       textOutput(\"browser\")     )   ) }  server <- shinyServer(function(input, output) {   output$browser <- renderText(input[[\"browser_version\"]]) })  shinyApp(ui = ui(), server = server) }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/connect_to_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect with sql database — connect_to_db","title":"Connect with sql database — connect_to_db","text":"Makes connection database based passed config data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/connect_to_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect with sql database — connect_to_db","text":"","code":"connect_to_db(db_credentials)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/connect_to_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect with sql database — connect_to_db","text":"db_credentials data.frame database config parameters","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare sql database config object — get_config","title":"Prepare sql database config object — get_config","text":"Converts config database file data.frame Configuration file contain following parameters (parameter separate line value separated = sign): case sqlite file: DB_NAME - path database file (absolute relative application directory) DRV - \"sqlite\" case external PostgreSQL database: DB_NAME, DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DRV - respective parameters  RPostgreSQL.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare sql database config object — get_config","text":"","code":"get_config(config_variables)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare sql database config object — get_config","text":"config_variables Named vector environmental variables concerning db connection.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare sql database config object — get_config","text":"Return data.frame passed parameters values.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_users_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get users data — get_users_data","title":"get users data — get_users_data","text":"get users data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_users_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get users data — get_users_data","text":"","code":"get_users_data(users_credentials_db_config)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/get_users_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get users data — get_users_data","text":"users_credentials_db_config Named vector environmental variables concerning db connection.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/initialize_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Register connection to database — initialize_connection","title":"Register connection to database — initialize_connection","text":"connects specified sqlite database (create new one exist). used outside server ui function.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/initialize_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register connection to database — initialize_connection","text":"","code":"initialize_connection(db_connection, username, session_id = NULL)  initialize_custom_connection(   db_connection,   username,   session_id,   table_schemes )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/initialize_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register connection to database — initialize_connection","text":"db_connection Connection database object. username Username logged user. session_id Logged user session id (NULL, id randomly generated). table_schemes Specific table schemes created connected inside 'db_connection'. list object specifies separate table form: table_name = c(col_1_name = col_1_type, ...)","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/initialize_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register connection to database — initialize_connection","text":"Return list two objects: session_id (useful specify user session app opened), db_connection object passed db_connection parameter. also sets empty 'user_log' table : CREATE TABLE user_log(time TIMESTAMP, session TEXT, username TEXT, action TEXT, id TEXT, value TEXT) 'session_details' table : CREATE TABLE session_details(time TIMESTAMP, session TEXT, detail TEXT) inside DB.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/list_stats_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO — list_stats_targets","title":"TODO — list_stats_targets","text":"TODO","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/list_stats_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO — list_stats_targets","text":"","code":"list_stats_targets(path)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/list_stats_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO — list_stats_targets","text":"path path db configs","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/log_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Log user activity — log_input","title":"Log user activity — log_input","text":"functions connects database log specific user activity. See Details section.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/log_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log user activity — log_input","text":"","code":"log_input(   user_connection_data,   input,   input_id,   matching_values = NULL,   input_type = \"text\" )  log_button(user_connection_data, input, button_id)  log_custom_action(user_connection_data, table_name = \"user_log\", values)  log_action(user_connection_data, action)  log_click(user_connection_data, id)  log_login(user_connection_data)  log_logout(user_connection_data)  log_session_detail(user_connection_data, detail)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/log_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log user activity — log_input","text":"user_connection_data List user session DB connection. See initialize_connection. input input object inherited server function. input_id id registered input control. matching_values object specified possible values register. input_type 'text' registered bare input value, 'json' parse value JSON format. button_id id registered button input control. table_name Specific table name create connect inside 'path_to_db'. values Named list. Names list specify column names table_name list elements corresponding values insert table. Column 'time' filled automatically pass . action Specified action value added 'user_log' table. id Id clicked button. detail Information describe session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/log_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log user activity — log_input","text":"log_input log_button observe selected input value registers insertion change inside specified database. function (except log_custom_action) store logs inside 'user_log' table. required build admin panel (See prepare_admin_panel_components). log_logout used inside observe function. based shiny::onStop.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_admin_panel_components — prepare_admin_panel_components","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"prepare_admin_panel_components","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"","code":"prepare_admin_panel_components(input, output, session, db_credentials)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"input input object inherited server function. output output object inherited server function. session session object inherited server function. db_credentials data.frame database config parameters","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/register_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Registers a new user in the database. — register_user","title":"Registers a new user in the database. — register_user","text":"Registers new user database.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/register_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a new user in the database. — register_user","text":"","code":"register_user(connection, username, password, roles = list(), info = list())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/register_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a new user in the database. — register_user","text":"connection Database connection. username string representing unique user name. password plain text password encrypted saved. roles list roles. role string representing role name. info named list containing additional information user.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/retrieve_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves all users stored in the database. — retrieve_users","title":"Retrieves all users stored in the database. — retrieve_users","text":"Retrieves users stored database.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/retrieve_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves all users stored in the database. — retrieve_users","text":"","code":"retrieve_users(connection)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/retrieve_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves all users stored in the database. — retrieve_users","text":"connection Database connection.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny.telemetry-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app usability logs and statistics — shiny.telemetry-package","title":"Shiny app usability logs and statistics — shiny.telemetry-package","text":"Shiny app usability logs statistics","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats Shiny server — shiny_stats_server","title":"Stats Shiny server — shiny_stats_server","text":"Stats Shiny server","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats Shiny server — shiny_stats_server","text":"","code":"shiny_stats_server(   get_user,   allow_admin_rule = function(session) TRUE,   db_credentials )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stats Shiny server — shiny_stats_server","text":"get_user function retrieve user name allow_admin_rule function asserts user administrator db_credentials data.frame database config parameters","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Stats Shiny UI — shiny_stats_ui","title":"Stats Shiny UI — shiny_stats_ui","text":"Stats Shiny UI","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stats Shiny UI — shiny_stats_ui","text":"","code":"shiny_stats_ui(custom_css_path = NULL)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny_stats_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stats Shiny UI — shiny_stats_ui","text":"custom_css_path path custom css","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/source_renviron.html","id":null,"dir":"Reference","previous_headings":"","what":"Source renviron from file — source_renviron","title":"Source renviron from file — source_renviron","text":"Source renviron file","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/source_renviron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source renviron from file — source_renviron","text":"","code":"source_renviron(path, variable_name)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/source_renviron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source renviron from file — source_renviron","text":"path path Renviron file variable_name name variable return function","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/source_renviron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source renviron from file — source_renviron","text":"environmental variable","code":""}]
