[{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Appsilon Data Science. Maintainer.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Science AD (2023). shiny.telemetry: Shiny app usability logs statistics. R package version 0.0.9009.","code":"@Manual{,   title = {shiny.telemetry: Shiny app usability logs and statistics},   author = {Appsilon Data Science},   year = {2023},   note = {R package version 0.0.9009}, }"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"shinytelemetry","dir":"","previous_headings":"","what":"Shiny app usability logs and statistics","title":"Shiny app usability logs and statistics","text":"Easy logging users activity session events Shiny App  shiny.telemetry R package tracks events occurring user session, input changes session duration, stores local remote database. provides developers tools help understand users interact Shiny dashboards answer questions : tabs/pages often visited, inputs users changing, average length session, etc.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Shiny app usability logs and statistics","text":"shiny.telemetry package can installed GitHub using remotes package:","code":"remotes::install_github(\"Appsilon/shiny.telemetry\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-use-in-a-shiny-dashboard","dir":"","previous_headings":"","what":"How to use in a Shiny Dashboard?","title":"Shiny app usability logs and statistics","text":"shiny.telemetry allows minimal setup 3 commands can track information session: session starts ends browser version used client Changes inputs (doesn’t track values default) code runs minimal example shiny application uses shiny.telemetry. example, package keep session information changes numericInput. ℹ️ note: using dashboard nothing happening user’s perspective operation run background (either server Javascript). inspecting code , can breakdown 3 lines code : Global Telemetry object used across different sessions Add necessary Javascript UI calling use_telemetry(). used track browser version. Initialize session-specific tracking calling method start_session() Telemetry object","code":"library(shiny) library(shiny.telemetry) telemetry <- Telemetry$new() # 1. Initialize telemetry with default options shinyApp(   ui = fluidPage(     use_telemetry(), # 2. Add necessary Javascript to Shiny     numericInput(\"n\", \"n\", 1),     plotOutput('plot')   ),   server = function(input, output) {     telemetry$start_session() # 3. Minimal setup to track events     output$plot <- renderPlot({ hist(runif(input$n)) })   } )"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-access-the-data","dir":"","previous_headings":"","what":"How to access the data?","title":"Shiny app usability logs and statistics","text":"developers administrators dashboard can access data gathered shiny.telemetry via Telemetry object directly DataStorage via appropriate provider. package analytics sample dashboard help access data. located inst/examples/app/analytics modified references correct DataStorage provider configuration.","code":"# After running the instrumented shiny.telemetry::Telemetry$new()$data_storage$read_events(\"2020-01-01\", \"2050-01-01\")  # default provider and path for Telemetry$new() shiny.telemetry::DataStorageRSQLite$new(db_path = \"telemetry.sqlite\")$read_events(\"2020-01-01\", \"2050-01-01\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"data-providers","dir":"","previous_headings":"","what":"Data providers","title":"Shiny app usability logs and statistics","text":"3 different types data providers can range local filesystem storage remote plumber REST API instance. SQLite using DataStorageRSQLite class Logfile using DataStorageLogFile class Plumber REST API using one providers backend using DataStoragePlumber class setup plumber requires valid Plumber instance running network communication can protected. See Plumber deployment documentation information.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"debugging-the-telemetry-calls","dir":"","previous_headings":"","what":"Debugging the Telemetry calls","title":"Shiny app usability logs and statistics","text":"package uses logger package internally shiny.telemetry namespace. debug shiny.telemetry calls dashboard, change threshold namespace DEBUG. ℹ️ note: command can run Shiny call adding .Rprofile.","code":"logger::log_threshold(\"DEBUG\", namespace = \"shiny.telemetry\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Shiny app usability logs and statistics","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Check Rhinoverse.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Storage abstract class to handle all the read/write operations — DataStorage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"Abstract R6 Class encapsulates operations needed Shiny.telemetry read write. removes complexity functions uses unified API.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"username string field returns current username session_id string field returns current session_id action_bucket string identifies bucket store user related action data session_bucket string identifies bucket store session details data","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"DataStorage$new() DataStorage$insert() DataStorage$read_user_data() DataStorage$read_session_data() DataStorage$close() DataStorage$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"initialize data storage object common providers","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$new()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-insert-","dir":"Reference","previous_headings":"","what":"Method insert()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"Insert new data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$insert(values, insert_time = TRUE, bucket = self$action_bucket)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"values list values write storage provider. insert_time boolean flag indicates `time` parameters added automatically bucket string name type data write (example, SQL represent table).","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-read-user-data-","dir":"Reference","previous_headings":"","what":"Method read_user_data()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"read user data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$read_user_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-read-session-data-","dir":"Reference","previous_headings":"","what":"Method read_session_data()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"read session data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$read_session_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"read session data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$close()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class for JSON Log File — DataStorageLogFile","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"Implementation DataStorage R6 class JSON log file backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"shiny.telemetry::DataStorage -> DataStorageLogFile","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"action_bucket string identifies file path store user related action data session_bucket string identifies bucket store session details data","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"DataStorageLogFile$new() DataStorageLogFile$insert() DataStorageLogFile$read_user_data() DataStorageLogFile$read_session_data() DataStorageLogFile$close() DataStorageLogFile$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$new(log_file_path, session_file_path)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"log_file_path string path JSON log file user actions session_file_path string path JSON log file session details","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-insert-","dir":"Reference","previous_headings":"","what":"Method insert()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"Insert new data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$insert(   values,   insert_time = TRUE,   bucket = private$log_file_path )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"values list values write database insert_time boolean flag indicates `time` parameters added automatically bucket path log file; defaults `log_file_path` used initialized","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-read-user-data-","dir":"Reference","previous_headings":"","what":"Method read_user_data()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"read user data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$read_user_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-read-session-data-","dir":"Reference","previous_headings":"","what":"Method read_session_data()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"read session data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$read_session_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"nothing, needs kept log_logout calls database backends discussion needed closing connecting really necessary. nothing, defined API consistency","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$close()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"data_storage <- DataStorageLogFile$new(   log_file_path = tempfile(pattern = \"user_stats\", fileext = \".json\"),   session_file_path = tempfile(pattern = \"session_details\", fileext = \".json\") )  telemetry <- Telemetry$new(data_storage = data_storage) telemetry$log_login()  telemetry$log_click(\"an_id\") telemetry$log_click(\"a_different_id\")  telemetry$log_session(detail = \"some detail\")  data_storage$read_user_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 3 × 9 #>   dashboard   version action     username  time   id    session value date       #>   <chr>       <chr>   <chr>      <chr>     <chr>  <chr> <chr>   <chr> <date>     #> 1 (dashboard) v0.0.0  login user anonymous 2023-… NA    NA      NA    2023-04-13 #> 2 (dashboard) v0.0.0  click      anonymous 2023-… an_id NA      NA    2023-04-13 #> 3 (dashboard) v0.0.0  click      anonymous 2023-… a_di… NA      NA    2023-04-13 data_storage$read_session_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 1 × 2 #>   session title       #>   <chr>   <chr>       #> 1 NA      some detail"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with SQLite provider — DataStoragePlumber","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"Implementation DataStorage R6 class SQLite backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"shiny.telemetry::DataStorage -> DataStoragePlumber","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"action_read_endpoint string field returns read action endpoint session_read_endpoint string field returns read session endpoint action_insert_endpoint string field returns insert action endpoint session_insert_endpoint string field returns insert session endpoint","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"DataStoragePlumber$new() DataStoragePlumber$insert() DataStoragePlumber$read_user_data() DataStoragePlumber$read_session_data() DataStoragePlumber$close() DataStoragePlumber$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$new(   hostname = \"127.0.0.1\",   port = 80,   protocol = \"http\",   path = NULL,   secret = NULL,   authorization = NULL )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"hostname string hostname plumber instance, port numeric value port number plumber instance. protocol string protocol connection plumber instance. path string sub-path plumber deployment. secret string secret sign communication plumber (can NULL disabling communication signing). authorization string use HTTP headers authorization (example: authenticate plumber deployment behind connect server).","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-insert-","dir":"Reference","previous_headings":"","what":"Method insert()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"Insert new data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$insert(   values,   insert_time = TRUE,   bucket = private$log_file_path )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"values list values write database insert_time boolean flag indicates `time` parameters added automatically bucket name table write","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-read-user-data-","dir":"Reference","previous_headings":"","what":"Method read_user_data()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"read user data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$read_user_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-read-session-data-","dir":"Reference","previous_headings":"","what":"Method read_session_data()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"read session data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$read_session_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"read session data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$close()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"if (FALSE) { # Make sure the PLUMBER_SECRET environment variable is valid before # running these examples (NULL or a valid secret)  data_storage <- DataStoragePlumber$new(   hostname = \"connect.appsilon.com\",   path = \"shiny_telemetry_plumber\",   port = 443,   protocol = \"https\",   authorization = Sys.getenv(\"CONNECT_AUTHORIZATION_KEY\"),   secret = Sys.getenv(\"PLUMBER_SECRET\") )  data_storage <- DataStoragePlumber$new(   hostname = \"127.0.0.1\",   path = NULL,   port = 8087,   protocol = \"http\",   secret = Sys.getenv(\"PLUMBER_SECRET\") )  telemetry <- Telemetry$new(data_storage = data_storage) telemetry$log_login()  telemetry$log_click(\"an_id\") telemetry$log_click(\"a_different_id\")  telemetry$log_session(detail = \"some detail\")  data_storage$read_user_data(\"2020-01-01\", \"2025-01-01\") data_storage$read_session_data(\"2020-01-01\", \"2025-01-01\") }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with SQLite provider — DataStorageRSQLite","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"Implementation DataStorage R6 class SQLite backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"shiny.telemetry::DataStorage -> DataStorageRSQLite","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"DataStorageRSQLite$new() DataStorageRSQLite$insert() DataStorageRSQLite$read_user_data() DataStorageRSQLite$read_session_data() DataStorageRSQLite$close() DataStorageRSQLite$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$new(db_path = \"user_stats.sqlite\")"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"db_path string path sqlfile","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-insert-","dir":"Reference","previous_headings":"","what":"Method insert()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"Insert new data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$insert(   values,   insert_time = TRUE,   bucket = self$action_bucket )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"values list values write database insert_time boolean flag indicates `time` parameters added automatically bucket name table write","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-read-user-data-","dir":"Reference","previous_headings":"","what":"Method read_user_data()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"read user data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$read_user_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-read-session-data-","dir":"Reference","previous_headings":"","what":"Method read_session_data()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"read session data SQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$read_session_data(date_from, date_to)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"date_from date representing starting day results date_to date representing last day results","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"read session data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$close()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"DataStorageRSQLite$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageRSQLite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with SQLite provider — DataStorageRSQLite","text":"","code":"data_storage <- DataStorageRSQLite$new(   db_path = tempfile(pattern = \"user_stats\", fileext = \".sqlite\") )  telemetry <- Telemetry$new(data_storage = data_storage) telemetry$log_login()  telemetry$log_click(\"an_id\") telemetry$log_click(\"a_different_id\")  telemetry$log_session(detail = \"some detail\")  data_storage$read_user_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 3 × 9 #>   time          dashboard version session username action id    value date       #>   <chr>         <chr>     <chr>   <chr>   <chr>    <chr>  <chr> <chr> <date>     #> 1 2023-04-13 1… (dashboa… v0.0.0  NA      anonymo… login… NA    NA    2023-04-13 #> 2 2023-04-13 1… (dashboa… v0.0.0  NA      anonymo… click  an_id NA    2023-04-13 #> 3 2023-04-13 1… (dashboa… v0.0.0  NA      anonymo… click  a_di… NA    2023-04-13 data_storage$read_session_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 1 × 2 #>   session title       #>   <chr>   <chr>       #> 1 NA      some detail"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Telemetry class to manage analytics gathering at a global level — Telemetry","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"instance class define metadata data storage provider gathering telemetry analytics Shiny dashboard. `name` `version` parameters describe dashboard name version track using analytics, allowing store analytics data multiple dashboards data storage provider. well discriminate different versions dashboard. default data storage provider uses local SQLite database, can customizable instantiating class, using another one supported providers (see [DataStorage]).","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"data_storage instance class inherits [DataStorage]. See documentation class information. dashboard string name dashboard version string version dashboard","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Telemetry$new() Telemetry$start_session() Telemetry$log_navigation() Telemetry$log_navigation_manual() Telemetry$log_login() Telemetry$log_logout() Telemetry$log_click() Telemetry$log_browser_version() Telemetry$log_session() Telemetry$log_button() Telemetry$log_all_inputs() Telemetry$log_input() Telemetry$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Constructor initializes Telemetry instance parameters.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$new(   name = \"(dashboard)\",   version = \"v0.0.0\",   data_storage = DataStorageRSQLite$new(db_path = file.path(\"telemetry.sqlite\")) )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"name (optional) string identifies name dashboard. default store data `(dashboard)`. version (optional) string identifies version dashboard. default use `v0.0.0`. data_storage (optional) DataStorage instance telemetry data stored. can take data storage providers package, default store SQLite local database current working directory filename `telemetry.sqlite`","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-start-session-","dir":"Reference","previous_headings":"","what":"Method start_session()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Setup basic telemetry","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$start_session(   track_inputs = TRUE,   track_values = FALSE,   login = TRUE,   logout = TRUE,   browser_version = TRUE,   navigation_input_id = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"track_inputs flag indicates basic telemetry track inputs change value. `TRUE` default track_values flag indicates basic telemetry track values inputs changing. `FALSE` default. parameter ignored `track_inputs` `FALSE` login flag indicates basic telemetry track session starts. `TRUE` default. logout flag indicates basic telemetry track session ends. `TRUE` default. browser_version flag indicates browser version tracked.`TRUE` default. navigation_input_id string vector strings represent input ids value tracked navigation events. .e. change value represent navigation page tab. default, navigation tracked. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-navigation-","dir":"Reference","previous_headings":"","what":"Method log_navigation()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log input change navigation event","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_navigation(input_id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies generic input Shiny application function can track log changes . session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-navigation-manual-","dir":"Reference","previous_headings":"","what":"Method log_navigation_manual()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log navigation event manually indicating id (input id)","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_navigation_manual(   navigation_id,   value,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"navigation_id string identifies navigation event. value string indicates value navigation session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-login-","dir":"Reference","previous_headings":"","what":"Method log_login()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log session starts","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_login(   username = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"username string username current session session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-logout-","dir":"Reference","previous_headings":"","what":"Method log_logout()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log session ends","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_logout(   username = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"username string username current session session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-click-","dir":"Reference","previous_headings":"","what":"Method log_click()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log action click","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_click(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"id string identifies manual click dashboard. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-browser-version-","dir":"Reference","previous_headings":"","what":"Method log_browser_version()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log browser version","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_browser_version(session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-session-","dir":"Reference","previous_headings":"","what":"Method log_session()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log session details","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_session(detail, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"detail string details session. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-button-","dir":"Reference","previous_headings":"","what":"Method log_button()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Track button track changes input (without storing values)","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_button(input_id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies button Shiny application function can track log changes . session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-all-inputs-","dir":"Reference","previous_headings":"","what":"Method log_all_inputs()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"short description...","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_all_inputs(   track_values = FALSE,   excluded_inputs = c(\"browser_version\"),   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"track_values flag indicates basic telemetry track values inputs changing. `FALSE` default. parameter ignored `track_inputs` `FALSE`. excluded_inputs vector input_ids tracked. default track browser version, added package. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-input-","dir":"Reference","previous_headings":"","what":"Method log_input()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"short description...","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_input(   input_id,   track_value = FALSE,   matching_values = NULL,   input_type = \"text\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies generic input Shiny application function can track log changes . track_value flag indicates basic telemetry track value input changing. `FALSE` default. matching_values object specified possible values register. input_type 'text' registered bare input value, 'json' parse value JSON format. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"telemetry <- Telemetry$new(   data_storage = DataStorageRSQLite$new(     db_path = tempfile(pattern = \"telemetry\", fileext = \".sqlite\")   ) )  telemetry <- Telemetry$new(   data_storage = DataStorageLogFile$new(     log_file_path = tempfile(pattern = \"user_stats\", fileext = \".txt\"),     session_file_path = tempfile(pattern = \"session_details\", fileext = \".txt\")   ) )  if (FALSE) { telemetry$start_session(logout = FALSE)  telemetry$data_storage$read_user_data(\"2020-01-01\", \"2025-01-01\") |> tail()  telemetry$start_session(logout = FALSE)  telemetry$data_storage$read_user_data(\"2020-01-01\", \"2025-01-01\") |> tail() }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run example telemetry analytics dashboard — analytics_app","title":"Run example telemetry analytics dashboard — analytics_app","text":"Run example telemetry analytics dashboard","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run example telemetry analytics dashboard — analytics_app","text":"","code":"analytics_app(data_storage)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run example telemetry analytics dashboard — analytics_app","text":"data_storage data_storage instance handle backend read writes.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run example telemetry analytics dashboard — analytics_app","text":"object represents analytics app. Printing object passing `shiny::runApp()` run .","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds id from a secret that can be used in open communication — build_id_from_secret","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"used shiny.telemetry, also externally Plumber endpoint.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"","code":"build_id_from_secret(secret)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"secret string contains information publicly available","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"string hash secret","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"","code":"build_id_from_secret(\"some_random_secret_generated_with_uuid::UUIDgenerate\") #> [1] \"830cc11b\""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds hash for a call — build_token","title":"Builds hash for a call — build_token","text":"Function takes creates signature `values` using secret.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds hash for a call — build_token","text":"","code":"build_token(values, secret = NULL)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds hash for a call — build_token","text":"values R object going signed secret string contains shared secret sign communication. can NULL telemetry plumber API disable communication feature","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds hash for a call — build_token","text":"string contains hash uniquely identify parameters","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Builds hash for a call — build_token","text":"used shiny.telemetry, also externally Plumber endpoint.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds hash for a call — build_token","text":"","code":"build_token(values = list(list(1, 2, 3), 2, 2, 3, \"bb\")) #> [1] \"99f110fffdfcbd97e98013a44f0eb0696f7b889699d8a1ee342ab6312e391652\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\")) #> [1] \"2d28d1fa15dd69df1e922fbddf01c0991d6bdb10ac408a5fcb5f14f6b52229a1\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\"), secret = \"abc\") #> [1] \"96425c9eceb7304f78a1b281252d3410634313e703d386b09776351ef974b292\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\"), secret = \"abd\") #> [1] \"f26e6db10cc6dba5bfdc101bd3b9ce12d06bf109e148b2a4460807f1275dafcc\""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_admin_panel_components — prepare_admin_panel_components","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"prepare_admin_panel_components","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"","code":"prepare_admin_panel_components(input, output, session, data_storage)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"input input object inherited server function. output output object inherited server function. session session object inherited server function. data_storage data_storage instance handle backend read writes.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny.telemetry-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app usability logs and statistics — shiny.telemetry-package","title":"Shiny app usability logs and statistics — shiny.telemetry-package","text":"Shiny app usability logs statistics","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds telemetry HTML elements to UI — use_telemetry","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"Function adds telemetry HTML elements UI","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"","code":"use_telemetry(id = \"\")"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"id (optional) string id representing namespace","code":""}]
