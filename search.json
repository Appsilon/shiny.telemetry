[{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Appsilon Data Science. Maintainer.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Science AD (2023). shiny.telemetry: Shiny app usability logs statistics. R package version 0.0.9009.","code":"@Manual{,   title = {shiny.telemetry: Shiny app usability logs and statistics},   author = {Appsilon Data Science},   year = {2023},   note = {R package version 0.0.9009}, }"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"shinytelemetry","dir":"","previous_headings":"","what":"Shiny app usability logs and statistics","title":"Shiny app usability logs and statistics","text":"Easy logging users activity session events Shiny App  shiny.telemetry R package tracks events occurring user session, input changes session duration, stores local remote database. provides developers tools help understand users interact Shiny dashboards answer questions : tabs/pages often visited, inputs users changing, average length session, etc.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Shiny app usability logs and statistics","text":"shiny.telemetry package can installed GitHub using remotes package:","code":"remotes::install_github(\"Appsilon/shiny.telemetry\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-use-in-a-shiny-dashboard","dir":"","previous_headings":"","what":"How to use in a Shiny Dashboard?","title":"Shiny app usability logs and statistics","text":"shiny.telemetry allows minimal setup 3 commands can track information session: session starts ends browser version used client Changes inputs (doesn’t track values default) code runs minimal example shiny application uses shiny.telemetry. example, package keep session information changes numericInput. ℹ️ note: using dashboard nothing happening user’s perspective operation run background (either server Javascript). inspecting code , can breakdown 3 lines code : Global Telemetry object used across different sessions Add necessary Javascript UI calling use_telemetry(). used track browser version. Initialize session-specific tracking calling method start_session() Telemetry object","code":"library(shiny) library(shiny.telemetry) telemetry <- Telemetry$new() # 1. Initialize telemetry with default options shinyApp(   ui = fluidPage(     use_telemetry(), # 2. Add necessary Javascript to Shiny     numericInput(\"n\", \"n\", 1),     plotOutput('plot')   ),   server = function(input, output) {     telemetry$start_session() # 3. Minimal setup to track events     output$plot <- renderPlot({ hist(runif(input$n)) })   } )"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"how-to-access-the-data","dir":"","previous_headings":"","what":"How to access the data?","title":"Shiny app usability logs and statistics","text":"developers administrators dashboard can access data gathered shiny.telemetry via Telemetry object directly DataStorage via appropriate provider. package analytics sample dashboard help access data. located inst/examples/app/analytics modified references correct DataStorage provider configuration.","code":"# After running the instrumented shiny.telemetry::Telemetry$new()$data_storage$read_events(\"2020-01-01\", \"2050-01-01\")  # default provider and path for Telemetry$new() shiny.telemetry::DataStorageSQLite$new(db_path = \"telemetry.sqlite\")$read_events(\"2020-01-01\", \"2050-01-01\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"data-providers","dir":"","previous_headings":"","what":"Data providers","title":"Shiny app usability logs and statistics","text":"3 different types data providers can range local filesystem storage remote plumber REST API instance. SQLite using DataStorageSQLite class Logfile using DataStorageLogFile class MariaDB using DataStorageMariaDB class PostgreSQL using DataStoragePostgreSQL class turn, Plumber data provider use one classes method data storage. setup plumber requires valid Plumber instance running network communication can protected. See Plumber deployment documentation information.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"debugging-the-telemetry-calls","dir":"","previous_headings":"","what":"Debugging the Telemetry calls","title":"Shiny app usability logs and statistics","text":"package uses logger package internally shiny.telemetry namespace. debug shiny.telemetry calls dashboard, change threshold namespace DEBUG. ℹ️ note: command can run Shiny call adding .Rprofile.","code":"logger::log_threshold(\"DEBUG\", namespace = \"shiny.telemetry\")"},{"path":"https://appsilon.github.io/shiny.telemetry/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Shiny app usability logs and statistics","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Check Rhinoverse.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Storage abstract class to handle all the read/write operations — DataStorage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"Abstract R6 Class encapsulates operations needed Shiny.telemetry read write. removes complexity functions uses unified API.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"event_bucket string identifies bucket store user related action data","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"DataStorage$new() DataStorage$insert() DataStorage$read_event_data() DataStorage$close() DataStorage$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"initialize data storage object common providers","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$new()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-insert-","dir":"Reference","previous_headings":"","what":"Method insert()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"Insert new data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$insert(app_name, type, session = NULL, details = NULL, time = NULL)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"app_name string name dashboard (version can also included string) type string identifies event type store session (optional) string identifies session event logged details atomic element list data save storage time date time value indicates moment record generated UTC. default NULL determined automatically, cases defined, use `Sys.time()` `lubridate::now(tzone = \"UTC\")` generate .","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-read-event-data-","dir":"Reference","previous_headings":"","what":"Method read_event_data()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"read user data SQLite.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$read_event_data(date_from = NULL, date_to = NULL)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"date_from (optional) date representing starting day results. date_to (optional) date representing last day results.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"Close connection necessary","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$close()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"","code":"DataStorage$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorage.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage abstract class to handle all the read/write operations — DataStorage","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class for JSON Log File — DataStorageLogFile","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"Implementation DataStorage R6 class JSON log file backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"shiny.telemetry::DataStorage -> DataStorageLogFile","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"event_bucket string identifies file path store user related action data","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"DataStorageLogFile$new() DataStorageLogFile$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$new(log_file_path)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"log_file_path string path JSON log file user actions","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"DataStorageLogFile$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageLogFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class for JSON Log File — DataStorageLogFile","text":"","code":"data_storage <- DataStorageLogFile$new(   log_file_path = tempfile(pattern = \"user_stats\", fileext = \".txt\") )  data_storage$insert(\"example\", \"test_event\", \"session1\") data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id\")) data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id2\", value = 32))  data_storage$insert(   \"example\", \"test_event_3_days_ago\", \"session1\",   time = lubridate::as_datetime(lubridate::today() - 3) )  data_storage$read_event_data() #> # A tibble: 4 × 8 #>   app_name type      session time                id    value date       username #>   <chr>    <chr>     <chr>   <dttm>              <chr> <chr> <date>     <chr>    #> 1 example  test_eve… sessio… 2023-04-19 07:18:01 NA    NA    2023-04-19 NA       #> 2 example  input     s1      2023-04-19 07:18:01 id    NA    2023-04-19 NA       #> 3 example  input     s1      2023-04-19 07:18:01 id2   32    2023-04-19 NA       #> 4 example  test_eve… sessio… 2023-04-16 00:00:00 NA    NA    2023-04-16 NA       data_storage$read_event_data(Sys.Date() - 1, Sys.Date() + 1) #> # A tibble: 3 × 8 #>   app_name type      session time                id    value date       username #>   <chr>    <chr>     <chr>   <dttm>              <chr> <chr> <date>     <chr>    #> 1 example  test_eve… sessio… 2023-04-19 07:18:01 NA    NA    2023-04-19 NA       #> 2 example  input     s1      2023-04-19 07:18:01 id    NA    2023-04-19 NA       #> 3 example  input     s1      2023-04-19 07:18:01 id2   32    2023-04-19 NA"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"Implementation DataStorage R6 class MariaDB backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"shiny.telemetry::DataStorage -> shiny.telemetry::DataStorageSQLFamily -> DataStorageMariaDB","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"DataStorageMariaDB$new() DataStorageMariaDB$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"","code":"DataStorageMariaDB$new(   username = NULL,   password = NULL,   hostname = \"127.0.0.1\",   port = 3306,   dbname = \"shiny_telemetry\" )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"username string MariaDB username. password string password username. hostname string hostname MariaDB instance. port numeric value port number MariaDB instance. dbname string name database MariaDB instance.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"","code":"DataStorageMariaDB$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageMariaDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with MariaDB / MySQL provider — DataStorageMariaDB","text":"","code":"if (FALSE) { data_storage <- DataStorageMariaDB$new(user = \"mariadb\", password = \"mysecretpassword\")  data_storage$insert(\"example\", \"test_event\", \"session1\") data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id1\")) data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id2\", value = 32))  data_storage$insert(   \"example\", \"test_event_3_days_ago\", \"session1\",   time = lubridate::as_datetime(lubridate::today() - 3) )  data_storage$read_event_data() data_storage$read_event_data(Sys.Date() - 1, Sys.Date() + 1) data_storage$close() }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with SQLite provider — DataStoragePlumber","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"Implementation DataStorage R6 class SQLite backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"shiny.telemetry::DataStorage -> DataStoragePlumber","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"event_read_endpoint string field returns read action endpoint event_insert_endpoint string field returns insert action endpoint","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"DataStoragePlumber$new() DataStoragePlumber$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$new(   hostname = \"127.0.0.1\",   port = 80,   protocol = \"http\",   path = NULL,   secret = NULL,   authorization = NULL )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"hostname string hostname plumber instance, port numeric value port number plumber instance. protocol string protocol connection plumber instance. path string sub-path plumber deployment. secret string secret sign communication plumber (can NULL disabling communication signing). authorization string use HTTP headers authorization (example: authenticate plumber deployment behind connect server).","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"DataStoragePlumber$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePlumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with SQLite provider — DataStoragePlumber","text":"","code":"if (FALSE) { # Make sure the PLUMBER_SECRET environment variable is valid before # running these examples (NULL or a valid secret)  data_storage <- DataStoragePlumber$new(   hostname = \"connect.appsilon.com\",   path = \"shiny_telemetry_plumber\",   port = 443,   protocol = \"https\",   authorization = Sys.getenv(\"CONNECT_AUTHORIZATION_KEY\"),   secret = Sys.getenv(\"PLUMBER_SECRET\") )  data_storage <- DataStoragePlumber$new(   hostname = \"127.0.0.1\",   path = NULL,   port = 8087,   protocol = \"http\",   secret = Sys.getenv(\"PLUMBER_SECRET\") )  data_storage$insert(\"example\", \"test_event\", \"session1\") data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id\")) data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id2\", value = 32))  data_storage$insert(   \"example\", \"test_event_3_days_ago\", \"session1\",   time = lubridate::as_datetime(lubridate::today() - 3) )  data_storage$read_event_data() data_storage$read_event_data(Sys.Date() - 1, Sys.Date() + 1) }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"Implementation DataStorage R6 class PostgreSQL backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"shiny.telemetry::DataStorage -> shiny.telemetry::DataStorageSQLFamily -> DataStoragePostgreSQL","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"DataStoragePostgreSQL$new() DataStoragePostgreSQL$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"","code":"DataStoragePostgreSQL$new(   username = NULL,   password = NULL,   hostname = \"127.0.0.1\",   port = 5432,   dbname = \"shiny_telemetry\" )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"username string PostgreSQL username. password string password username. hostname string hostname PostgreSQL instance. port numeric value port number PostgreSQL instance. dbname string name database PostgreSQL instance.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"","code":"DataStoragePostgreSQL$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStoragePostgreSQL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with PostgreSQL provider — DataStoragePostgreSQL","text":"","code":"if (FALSE) { data_storage <- DataStoragePostgreSQL$new(user = \"postgres\", password = \"mysecretpassword\")  data_storage$insert(\"example\", \"test_event\", \"session1\") data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id1\")) data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id2\", value = 32))  data_storage$insert(   \"example\", \"test_event_3_days_ago\", \"session1\",   time = lubridate::as_datetime(lubridate::today() - 3) )  data_storage$read_event_data() data_storage$read_event_data(Sys.Date() - 1, Sys.Date() + 1) data_storage$close() }"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage abstract class for SQL providers — DataStorageSQLFamily","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"Abstract subclass DataStorage R6 class SQL family providers","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"shiny.telemetry::DataStorage -> DataStorageSQLFamily","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"DataStorageSQLFamily$new() DataStorageSQLFamily$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"","code":"DataStorageSQLFamily$new()"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"","code":"DataStorageSQLFamily$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLFamily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage abstract class for SQL providers — DataStorageSQLFamily","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":null,"dir":"Reference","previous_headings":"","what":"Data storage class with SQLite provider — DataStorageSQLite","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"Implementation DataStorage R6 class SQLite backend using unified API read/write operations","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"shiny.telemetry::DataStorage -> shiny.telemetry::DataStorageSQLFamily -> DataStorageSQLite","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"shiny.telemetry::DataStorage$close() shiny.telemetry::DataStorage$insert() shiny.telemetry::DataStorage$read_event_data()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"DataStorageSQLite$new() DataStorageSQLite$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"Initialize data storage class","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"","code":"DataStorageSQLite$new(db_path = \"user_stats.sqlite\")"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"db_path string path sqlfile","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"","code":"DataStorageSQLite$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/DataStorageSQLite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data storage class with SQLite provider — DataStorageSQLite","text":"","code":"data_storage <- DataStorageSQLite$new(   db_path = tempfile(pattern = \"user_stats\", fileext = \".sqlite\") )  data_storage$insert(\"example\", \"test_event\", \"session1\") data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id1\")) data_storage$insert(\"example\", \"input\", \"s1\", list(id = \"id2\", value = 32))  data_storage$insert(   \"example\", \"test_event_3_days_ago\", \"session1\",   time = lubridate::as_datetime(lubridate::today() - 3) )  data_storage$read_event_data() #> # A tibble: 4 × 8 #>   time                app_name session  type     id    value date       username #>   <dttm>              <chr>    <chr>    <chr>    <chr> <chr> <date>     <chr>    #> 1 2023-04-19 07:18:03 example  session1 test_ev… NA    NA    4606824-1… NA       #> 2 2023-04-19 07:18:03 example  s1       input    id1   NA    4606824-1… NA       #> 3 2023-04-19 07:18:03 example  s1       input    id2   32    4606824-1… NA       #> 4 2023-04-16 00:00:00 example  session1 test_ev… NA    NA    4606043-0… NA       data_storage$read_event_data(Sys.Date() - 1, Sys.Date() + 1) #> # A tibble: 3 × 8 #>   time                app_name session  type     id    value date       username #>   <dttm>              <chr>    <chr>    <chr>    <chr> <chr> <date>     <chr>    #> 1 2023-04-19 07:18:03 example  session1 test_ev… NA    NA    4606824-1… NA       #> 2 2023-04-19 07:18:03 example  s1       input    id1   NA    4606824-1… NA       #> 3 2023-04-19 07:18:03 example  s1       input    id2   32    4606824-1… NA"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Telemetry class to manage analytics gathering at a global level — Telemetry","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"instance class define metadata data storage provider gathering telemetry analytics Shiny dashboard. `name` `version` parameters describe dashboard name version track using analytics, allowing store analytics data multiple dashboards data storage provider. well discriminate different versions dashboard. default data storage provider uses local SQLite database, can customizable instantiating class, using another one supported providers (see [DataStorage]).","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"data_storage instance class inherits [DataStorage]. See documentation class information. app_name string name dashboard","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Telemetry$new() Telemetry$start_session() Telemetry$log_navigation() Telemetry$log_navigation_manual() Telemetry$log_login() Telemetry$log_logout() Telemetry$log_click() Telemetry$log_browser_version() Telemetry$log_button() Telemetry$log_all_inputs() Telemetry$log_input() Telemetry$log_input_manual() Telemetry$log_custom_event() Telemetry$clone()","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Constructor initializes Telemetry instance parameters.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$new(   app_name = \"(dashboard)\",   data_storage = DataStorageSQLite$new(db_path = file.path(\"telemetry.sqlite\")) )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"app_name (optional) string identifies name dashboard. default store data `(dashboard)`. data_storage (optional) DataStorage instance telemetry data stored. can take data storage providers package, default store SQLite local database current working directory filename `telemetry.sqlite` version (optional) string identifies version dashboard. default use `v0.0.0`.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-start-session-","dir":"Reference","previous_headings":"","what":"Method start_session()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Setup basic telemetry","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$start_session(   track_inputs = TRUE,   track_values = FALSE,   login = TRUE,   logout = TRUE,   browser_version = TRUE,   navigation_input_id = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"track_inputs flag indicates basic telemetry track inputs change value. `TRUE` default track_values flag indicates basic telemetry track values inputs changing. `FALSE` default. parameter ignored `track_inputs` `FALSE` login flag indicates basic telemetry track session starts. `TRUE` default. logout flag indicates basic telemetry track session ends. `TRUE` default. browser_version flag indicates browser version tracked.`TRUE` default. navigation_input_id string vector strings represent input ids value tracked navigation events. .e. change value represent navigation page tab. default, navigation tracked. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-navigation-","dir":"Reference","previous_headings":"","what":"Method log_navigation()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log input change navigation event","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_navigation(input_id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies generic input Shiny application function can track log changes . session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-navigation-manual-","dir":"Reference","previous_headings":"","what":"Method log_navigation_manual()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log navigation event manually indicating id (input id)","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_navigation_manual(   navigation_id,   value,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"navigation_id string identifies navigation event. value string indicates value navigation session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-login-","dir":"Reference","previous_headings":"","what":"Method log_login()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log session starts","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_login(   username = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"username string username current session session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-logout-","dir":"Reference","previous_headings":"","what":"Method log_logout()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log session ends","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_logout(   username = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"username string username current session session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-click-","dir":"Reference","previous_headings":"","what":"Method log_click()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log action click","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_click(id, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"id string identifies manual click dashboard. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-browser-version-","dir":"Reference","previous_headings":"","what":"Method log_browser_version()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log browser version","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_browser_version(session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-button-","dir":"Reference","previous_headings":"","what":"Method log_button()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Track button track changes input (without storing values)","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_button(   input_id,   track_value = FALSE,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies button Shiny application function can track log changes . track_value flag indicates basic telemetry track value input changing. `FALSE` default. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-all-inputs-","dir":"Reference","previous_headings":"","what":"Method log_all_inputs()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"short description...","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_all_inputs(   track_values = FALSE,   excluded_inputs = c(\"browser_version\"),   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"track_values flag indicates basic telemetry track values inputs changing. `FALSE` default. parameter ignored `track_inputs` `FALSE`. excluded_inputs vector input_ids tracked. default track browser version, added package. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-input-","dir":"Reference","previous_headings":"","what":"Method log_input()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"short description...","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_input(   input_id,   track_value = FALSE,   matching_values = NULL,   input_type = \"text\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies generic input Shiny application function can track log changes . track_value flag indicates basic telemetry track value input changing. `FALSE` default. matching_values object specified possible values register. input_type 'text' registered bare input value, 'json' parse value JSON format. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-input-manual-","dir":"Reference","previous_headings":"","what":"Method log_input_manual()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log manual input value. can called telemetry also used layer log_input family functions actual log event. creates correct payload log event internally.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_input_manual(   input_id,   value = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"input_id string identifies generic input Shiny application function can track log changes . value (optional) scalar value list value register. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-log-custom-event-","dir":"Reference","previous_headings":"","what":"Method log_custom_event()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"Log manual event","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$log_custom_event(   event_type,   details = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"event_type string identifies event type details (optional) scalar value list value register. session ShinySession object NULL identify current Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"Telemetry$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/Telemetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Telemetry class to manage analytics gathering at a global level — Telemetry","text":"","code":"telemetry <- Telemetry$new(   data_storage = DataStorageLogFile$new(     log_file_path = tempfile(pattern = \"user_stats\", fileext = \".txt\")   ) )  # # Create dummy session (only for example purposes) session <- shiny::MockShinySession$new() class(session) <- c(class(session), \"ShinySession\")  telemetry$start_session(session = session) #> NULL  telemetry$log_click(\"a_button\", session = session)  telemetry$log_custom_event(\"a_button\", list(value = 2023), session = session) telemetry$log_custom_event(\"a_button\", list(custom_field = 23), session = session)  # Manual call loging with custom username telemetry$log_login(\"ben\", session = session)  telemetry$data_storage$read_event_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 5 × 9 #>   app_name   type  session id    value custom_field username time                #>   <chr>      <chr> <chr>   <chr> <chr> <chr>        <chr>    <dttm>              #> 1 (dashboar… login e03c0b… NA    NA    NA           NA       2023-04-19 07:18:04 #> 2 (dashboar… click e03c0b… a_bu… NA    NA           NA       2023-04-19 07:18:04 #> 3 (dashboar… a_bu… e03c0b… NA    2023  NA           NA       2023-04-19 07:18:04 #> 4 (dashboar… a_bu… e03c0b… NA    NA    23           NA       2023-04-19 07:18:04 #> 5 (dashboar… login e03c0b… NA    NA    NA           ben      2023-04-19 07:18:04 #> # ℹ 1 more variable: date <date>  # # Using SQLite  telemetry <- Telemetry$new(   data_storage = DataStorageSQLite$new(     db_path = tempfile(pattern = \"telemetry\", fileext = \".sqlite\")   ) )  telemetry$log_custom_event(\"a_button\", list(value = 2023), session = session) telemetry$log_custom_event(\"a_button\", list(custom_field = 23), session = session)  telemetry$data_storage$read_event_data(\"2020-01-01\", \"2025-01-01\") #> # A tibble: 2 × 9 #>   time                app_name session type  value custom_field date       id    #>   <dttm>              <chr>    <chr>   <chr> <chr> <chr>        <date>     <chr> #> 1 2023-04-19 07:18:04 (dashbo… e03c0b… a_bu… 2023  NA           4606824-1… NA    #> 2 2023-04-19 07:18:04 (dashbo… e03c0b… a_bu… NA    23           4606824-1… NA    #> # ℹ 1 more variable: username <chr>"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run example telemetry analytics dashboard — analytics_app","title":"Run example telemetry analytics dashboard — analytics_app","text":"Run example telemetry analytics dashboard","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run example telemetry analytics dashboard — analytics_app","text":"","code":"analytics_app(data_storage)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run example telemetry analytics dashboard — analytics_app","text":"data_storage data_storage instance handle backend read writes.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/analytics_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run example telemetry analytics dashboard — analytics_app","text":"object represents analytics app. Printing object passing `shiny::runApp()` run .","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds id from a secret that can be used in open communication — build_id_from_secret","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"used shiny.telemetry, also externally Plumber endpoint.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"","code":"build_id_from_secret(secret)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"secret string contains information publicly available","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"string hash secret","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_id_from_secret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds id from a secret that can be used in open communication — build_id_from_secret","text":"","code":"build_id_from_secret(\"some_random_secret_generated_with_uuid::UUIDgenerate\") #> [1] \"830cc11b\""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_query_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Build query to read from table in DataStorageSQLite provider — build_query_sql","title":"Build query to read from table in DataStorageSQLite provider — build_query_sql","text":"Build query read table DataStorageSQLite provider","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_query_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build query to read from table in DataStorageSQLite provider — build_query_sql","text":"","code":"build_query_sql(   bucket,   date_from = NULL,   date_to = NULL,   timestamp_wrapper = NULL )"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_query_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build query to read from table in DataStorageSQLite provider — build_query_sql","text":"bucket string name table date_from date representing starting day results. Can NULL. date_to date representing last day results. Can NULL. timestamp_wrapper string function wrap seconds database query","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_query_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build query to read from table in DataStorageSQLite provider — build_query_sql","text":"string SQL query","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_query_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build query to read from table in DataStorageSQLite provider — build_query_sql","text":"","code":"shiny.telemetry:::build_query_sql(\"table_name\") #> [1] \"SELECT * FROM table_name\" shiny.telemetry:::build_query_sql(\"table_name\", Sys.Date() - 365) #> [1] \"SELECT * FROM table_name WHERE time >= 1650326400\" shiny.telemetry:::build_query_sql(\"table_name\", date_to = Sys.Date() + 365) #> [1] \"SELECT * FROM table_name WHERE time < 1713484800\" shiny.telemetry:::build_query_sql(\"table_name\", Sys.Date() - 365, Sys.Date() + 365) #> [1] \"SELECT * FROM table_name WHERE time >= 1650326400 AND time < 1713484800\" shiny.telemetry:::build_query_sql(\"table_name\", as.Date(\"2023-04-13\"), as.Date(\"2000-01-01\")) #> [1] \"SELECT * FROM table_name WHERE time >= 1681344000 AND time < 946771200\" shiny.telemetry:::build_query_sql(   \"table_name\", as.Date(\"2023-04-13\"), as.Date(\"2000-01-01\"), timestamp_wrapper = \"to_timestamp\" ) #> [1] \"SELECT * FROM table_name WHERE time >= to_timestamp(1681344000) AND time < to_timestamp(946771200)\""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds hash for a call — build_token","title":"Builds hash for a call — build_token","text":"Function takes creates signature `values` using secret.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds hash for a call — build_token","text":"","code":"build_token(values, secret = NULL)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds hash for a call — build_token","text":"values R object going signed secret string contains shared secret sign communication. can NULL telemetry plumber API disable communication feature","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds hash for a call — build_token","text":"string contains hash uniquely identify parameters","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Builds hash for a call — build_token","text":"used shiny.telemetry, also externally Plumber endpoint.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/build_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds hash for a call — build_token","text":"","code":"build_token(values = list(list(1, 2, 3), 2, 2, 3, \"bb\")) #> [1] \"99f110fffdfcbd97e98013a44f0eb0696f7b889699d8a1ee342ab6312e391652\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\")) #> [1] \"2d28d1fa15dd69df1e922fbddf01c0991d6bdb10ac408a5fcb5f14f6b52229a1\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\"), secret = \"abc\") #> [1] \"96425c9eceb7304f78a1b281252d3410634313e703d386b09776351ef974b292\" build_token(values = list(list(1, 2, 3), 1, 2, 3, \"bb\"), secret = \"abd\") #> [1] \"f26e6db10cc6dba5bfdc101bd3b9ce12d06bf109e148b2a4460807f1275dafcc\""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_from_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Common date_from to recognize as NULL — date_from_null","title":"Common date_from to recognize as NULL — date_from_null","text":"Common date_from recognize NULL","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_from_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common date_from to recognize as NULL — date_from_null","text":"","code":"date_from_null"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_from_null.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Common date_from to recognize as NULL — date_from_null","text":"object class character length 1.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_to_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Common date_to to recognize as NULL — date_to_null","title":"Common date_to to recognize as NULL — date_to_null","text":"Common date_to recognize NULL","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_to_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common date_to to recognize as NULL — date_to_null","text":"","code":"date_to_null"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/date_to_null.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Common date_to to recognize as NULL — date_to_null","text":"object class character length 1.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_admin_panel_components — prepare_admin_panel_components","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"prepare_admin_panel_components","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"","code":"prepare_admin_panel_components(input, output, session, data_storage)"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/prepare_admin_panel_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_admin_panel_components — prepare_admin_panel_components","text":"input input object inherited server function. output output object inherited server function. session session object inherited server function. data_storage data_storage instance handle backend read writes.","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/shiny.telemetry-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app usability logs and statistics — shiny.telemetry-package","title":"Shiny app usability logs and statistics — shiny.telemetry-package","text":"Shiny app usability logs statistics","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds telemetry HTML elements to UI — use_telemetry","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"Function adds telemetry HTML elements UI","code":""},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"","code":"use_telemetry(id = \"\")"},{"path":"https://appsilon.github.io/shiny.telemetry/reference/use_telemetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds telemetry HTML elements to UI — use_telemetry","text":"id (optional) string id representing namespace","code":""}]
