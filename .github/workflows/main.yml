on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: R-CMD-check

jobs:
  ###################
  # R CMD check job #
  ###################
  main:
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    runs-on: ${{ matrix.config.os }}

    timeout-minutes: 30

    #############################
    # Run on multiple platforms #
    #############################
    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest, r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-22.04, r: 'devel'}
        - {os: ubuntu-22.04, r: 'release'}
        - {os: ubuntu-22.04, r: 'oldrel'}

    steps:
      ##################
      # Load all steps #
      ##################

      - name: Checkout repository
        ##########################
        # Checkout the code base #
        ##########################
        uses: actions/checkout@v3

      - name: Install R
        #############
        # Install R #
        #############
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install R package dependencies
        ##########################
        # Install R Dependencies #
        ##########################
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # Necessary to avoid object usage linter errors.
          extra-packages: local::.

      - name: R CMD check
        ###########################
        # Perform the R CMD check #
        ###########################
        if: always()
        uses: r-lib/actions/check-r-package@v2
        with:
          error-on: '"note"'

      - name: Lint
        ######################
        # Lint the code base #
        ######################
        if: always()
        shell: Rscript {0}
        run: |
          lints <- lintr::lint_package()
          for (lint in lints) print(lint)
          quit(status = length(lints) > 0)

      - name: Spell Check
        ###############
        # Spell check #
        ###############
        if : always()
        shell: Rscript {0}
        run: |
          spell_check <- spelling::spell_check_package(use_wordlist = TRUE)
          if (nrow(spell_check) > 0) {
            print(spell_check)
          }
          quit(status = nrow(spell_check) > 0)
