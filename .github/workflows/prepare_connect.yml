on:
  push:
    branches:
      - tmp/deployment

name: Prepare Connect Deployment

jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install renv and box
        if : always()
        shell: Rscript {0}
        run: |
          install.packages(c("renv", "box"))

      - name: Setup deploy branch
        run: |
          git switch bot/deploy 2>/dev/null || git switch -c bot/deploy
          rm -rf R README.md man DESCRIPTION NAMESPACE .Rbuildignore LICENSE tests
          git checkout ${{ github.sha }} -- inst/examples

      - name: Prepare Analytics App
        if : always()
        shell: Rscript {0}
        run: |
          setwd("inst/examples/app/analytics")
          renv::init()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Prepare Instrumentation App
        if : always()
        shell: Rscript {0}
        run: |
          setwd("inst/examples/app/instrumentation")
          renv::init()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Prepare Plumber API
        if : always()
        shell: Rscript {0}
        run: |
          setwd("plumber_rest_api")
          renv::init()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Commit changes
        run: |
          git commit -m "Update deployed apps @${{ steps.vars.outputs.sha_short }}"
          git status
          git describe --all
          git log
