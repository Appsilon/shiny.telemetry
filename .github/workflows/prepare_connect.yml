on:
  push:
    branches:
      - tmp/deployment

name: Prepare Connect Deployment

env:
  RENV_PATHS_ROOT: ~/.local/share/renv
  BRANCH_DEPLOY: bot/deploy

jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Setup system dependencies
        run: >
          sudo apt-get update && sudo apt-get install --yes
          libcurl4-openssl-dev

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Install renv and box
        if : always()
        shell: Rscript {0}
        run: |
          install.packages(c("renv", "box"))

      - name: Setup deploy branch
        run: |
          git switch $BRANCH_DEPLOY 2>/dev/null || git switch -c $BRANCH_DEPLOY

      - name: Cleanup unnecesary files (only passes if branch does not exist)
        continue-on-error: true
        run: |
          git rm rm -rf R man tests pkgdown
          git rm -f DESCRIPTION NAMESPACE .Rbuildignore LICENSE
          git rm -f .lintr renovate.json .whitesource README.md
          git rm -rf inst

      - name: Checkout Apps
        run: |

          git checkout ${{ github.sha }} -- inst/examples/app

          mv inst/examples/app/analytics analytics
          mv inst/examples/app/instrumentation instrumentation

      - name: Prepare Analytics App
        if : always()
        shell: Rscript {0}
        run: |
          setwd("analytics")
          renv::init()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Prepare Instrumentation App
        if : always()
        shell: Rscript {0}
        run: |
          setwd("instrumentation")
          renv::init()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Prepare Plumber API
        if : always()
        shell: Rscript {0}
        run: |
          setwd("plumber_rest_api")
          renv::restore()
          renv::install("appsilon/shiny.telemetry")
          renv::install("rsconnect")
          rsconnect::writeManifest()

      - name: Commit changes
        run: |
          git add instrumentation/manifest.json
          git add analytics/manifest.json
          git add plumber_rest_api/manifest.json

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git commit -m "Update deployed apps @${{ env.sha_short }}"
          git status
          git describe --all
          git log
      - name: Push to branch
        run: |
          git push origin $BRANCH_DEPLOY
