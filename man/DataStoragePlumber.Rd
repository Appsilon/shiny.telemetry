% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-storage-plumber.R
\name{DataStoragePlumber}
\alias{DataStoragePlumber}
\title{Data storage class with SQLite provider}
\description{
Implementation of the DataStorage R6 class to SQLite backend using a unified
API for read/write operations
}
\examples{
\dontrun{
# Make sure the PLUMBER_SECRET environment variable is valid before
# running these examples (NULL or a valid secret)

data_storage <- DataStoragePlumber$new(
  hostname = "connect.appsilon.com",
  path = "shiny_telemetry_plumber",
  port = 443,
  protocol = "https",
  authorization = Sys.getenv("CONNECT_AUTHORIZATION_KEY"),
  secret = Sys.getenv("PLUMBER_SECRET")
)

data_storage <- DataStoragePlumber$new(
  hostname = "127.0.0.1",
  path = NULL,
  port = 8087,
  protocol = "http",
  secret = Sys.getenv("PLUMBER_SECRET")
)

telemetry <- Telemetry$new(data_storage = data_storage)
telemetry$log_login()

telemetry$log_click("an_id")
telemetry$log_click("a_different_id")

telemetry$log_session(detail = "some detail")

data_storage$read_user_data("2020-01-01", "2025-01-01")
data_storage$read_session_data("2020-01-01", "2025-01-01")
}
}
\section{Super class}{
\code{\link[shiny.telemetry:DataStorage]{shiny.telemetry::DataStorage}} -> \code{DataStoragePlumber}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{action_read_endpoint}}{string field that returns read action
endpoint}

\item{\code{session_read_endpoint}}{string field that returns read session
endpoint}

\item{\code{action_insert_endpoint}}{string field that returns insert action
endpoint}

\item{\code{session_insert_endpoint}}{string field that returns insert session
endpoint}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DataStoragePlumber-new}{\code{DataStoragePlumber$new()}}
\item \href{#method-DataStoragePlumber-insert}{\code{DataStoragePlumber$insert()}}
\item \href{#method-DataStoragePlumber-read_user_data}{\code{DataStoragePlumber$read_user_data()}}
\item \href{#method-DataStoragePlumber-read_session_data}{\code{DataStoragePlumber$read_session_data()}}
\item \href{#method-DataStoragePlumber-close}{\code{DataStoragePlumber$close()}}
\item \href{#method-DataStoragePlumber-clone}{\code{DataStoragePlumber$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-new"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-new}{}}}
\subsection{Method \code{new()}}{
Initialize the data storage class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$new(
  hostname = "127.0.0.1",
  port = 80,
  protocol = "http",
  path = NULL,
  secret = NULL,
  authorization = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hostname}}{string with hostname of plumber instance,}

\item{\code{port}}{numeric value with port number of plumber instance.}

\item{\code{protocol}}{string with protocol of the connection of the plumber
instance.}

\item{\code{path}}{string with sub-path of plumber deployment.}

\item{\code{secret}}{string with secret to sign communication with plumber (can
be NULL for disabling communication signing).}

\item{\code{authorization}}{string to use in HTTP headers for authorization
(for example: to authenticate to a plumber deployment behind a connect
server).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-insert"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-insert}{}}}
\subsection{Method \code{insert()}}{
Insert new data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$insert(values, bucket = self$action_bucket)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{values}}{list of values to write to database}

\item{\code{bucket}}{name of table to write}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-read_user_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-read_user_data}{}}}
\subsection{Method \code{read_user_data()}}{
read all user data from SQLite
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$read_user_data(date_from, date_to)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{date_from}}{date representing the starting day of results}

\item{\code{date_to}}{date representing the last day of results}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-read_session_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-read_session_data}{}}}
\subsection{Method \code{read_session_data()}}{
read all session data from SQLite
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$read_session_data(date_from, date_to)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{date_from}}{date representing the starting day of results}

\item{\code{date_to}}{date representing the last day of results}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-close"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-close}{}}}
\subsection{Method \code{close()}}{
read all session data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataStoragePlumber-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DataStoragePlumber-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataStoragePlumber$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
