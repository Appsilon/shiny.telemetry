% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logging-tools.R
\name{log_input}
\alias{log_input}
\alias{log_button}
\alias{log_custom_action}
\alias{log_custom_session}
\alias{log_action}
\alias{log_click}
\alias{log_login}
\alias{log_logout}
\alias{log_session_detail}
\title{Log user activity}
\usage{
log_input(
  data_storage,
  input,
  input_id,
  matching_values = NULL,
  input_type = "text"
)

log_button(data_storage, input, button_id)

log_custom_action(data_storage, values)

log_custom_session(data_storage, values)

log_action(data_storage, action)

log_click(data_storage, id)

log_login(data_storage)

log_logout(data_storage)

log_session_detail(data_storage, detail)
}
\arguments{
\item{data_storage}{data_storage instance that will handle all backend read
and writes.}

\item{input}{input object inherited from server function.}

\item{input_id}{id of registered input control.}

\item{matching_values}{An object specified possible values to register.}

\item{input_type}{'text' to registered bare input value, 'json' to parse
value from JSON format.}

\item{button_id}{id of registered button input control.}

\item{values}{Named list. Names of the list specify column names of
\code{bucket} and list elements corresponding values that should be
inserted. Columns 'time' and 'session' are filled automatically so
you cannot pass it on you own.}

\item{action}{Specified action value that should be added to 'user_log'
bucket.}

\item{id}{Id of clicked button.}

\item{detail}{Information that should describe session.}
}
\description{
These functions connects to database and log specific user
activity. See more in \strong{Details} section.
}
\details{
\code{log_input} and \code{log_button} observe selected input value
and registers its insertion or change inside specified database.

Each function (except \code{log_custom_action}) store logs inside
'user_log' table. It is required to build admin panel

\code{log_logout} should be used inside \code{observe} function.
It is based on \code{shiny::onStop}.
}
